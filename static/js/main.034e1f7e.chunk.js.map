{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","index.js"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","className","preventDefault","type","onChange","pattern","title","required","Filter","protoTypes","PropTypes","string","isRequired","func","ContactListItem","onDeleteContact","onClick","ContactList","contacts","map","id","Container","children","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","uuidv4","newContact","toLowerCase","includes","alert","normalizedFilter","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAGe,SAASA,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAYJ,OACE,uBAAMC,UAAU,eAAeV,SATd,SAAAO,GACnBA,EAAMI,iBAENX,EAAS,CAACE,OAAME,WAChBD,EAAQ,IACRE,EAAU,KAIR,UACA,wBAAOK,UAAU,sBAAjB,iBAEE,uBACEE,KAAK,OACLF,UAAU,sBACVR,KAAK,OACLO,MAAOP,EACPW,SAAUP,EACVQ,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAON,UAAU,sBAAjB,mBAEE,uBACEE,KAAK,MACLF,UAAU,sBACVR,KAAK,SACLO,MAAOL,EACPS,SAAUP,EACVQ,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGV,wBACEJ,KAAK,SACLF,UAAU,oBAFZ,4B,oBCxDFO,G,MAAS,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAOI,EAAV,EAAUA,SAAV,OACb,wBAAOH,UAAU,iBAAjB,kCAEE,uBACEE,KAAK,OACLF,UAAU,wBACVD,MAAOA,EACPI,SAAUA,SAIhBI,EAAOC,WAAa,CAClBT,MAAOU,IAAUC,OAAOC,WACxBR,SAAUM,IAAUG,KAAKD,YAGZJ,QCHAM,G,MAbS,SAAC,GAAD,IAAGrB,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQoB,EAAjB,EAAiBA,gBAAjB,OACtB,qCACE,iCAAOtB,EAAP,KAAeE,KACf,wBAAQQ,KAAK,SAASF,UAAU,2BAA2Be,QAASD,EAApE,yBCoBWE,G,MAtBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUH,EAAb,EAAaA,gBAAb,OAClB,6BACGG,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAI3B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,oBAAaM,UAAU,qBAAvB,SACE,cAAC,EAAD,CACER,KAAMA,EACNE,OAAQA,EACRoB,gBAAiB,kBAAMA,EAAgBK,OAJlCA,UCHAC,G,MAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKrB,UAAU,YAAf,SAA4BqB,M,MCKjD,SAASC,IACtB,MAAgC/B,oBAC9B,kCAAMgC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA7C,QACA,CACA,CAACR,GAAI,OAAQ3B,KAAM,gBAAiBE,OAAQ,aAC5C,CAACyB,GAAI,OAAQ3B,KAAM,iBAAkBE,OAAQ,aAC7C,CAACyB,GAAI,OAAQ3B,KAAM,gBAAiBE,OAAQ,aAC5C,CAACyB,GAAI,OAAQ3B,KAAM,iBAAkBE,OAAQ,iBAN/C,mBAAOuB,EAAP,KAAiBW,EAAjB,KAQA,EAA4BrC,mBAAS,IAArC,mBAAOsC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRN,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAUhB,MACtD,CAACA,IAsCF,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAa3B,SArCA,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACpBwC,EAAU,CACdf,GAAIgB,cACJ3C,OACAE,UAGI0C,EAAaF,EAAQ1C,KAAK6C,cACFpB,EAASC,KAAI,SAAAgB,GAAO,OAAIA,EAAQ1C,KAAK6C,iBAEzCC,SAASF,GACjCG,MAAM,GAAD,OAAIL,EAAQ1C,KAAZ,6BAIPoC,EAAY,CAACM,GAAF,mBAAcjB,QAwBrB,0CACA,cAAC,EAAD,CAAQlB,MAAO8B,EAAQ1B,SAlBR,SAAAN,GACnBiC,EAAUjC,EAAMC,cAAcC,UAmB1B,cAAC,EAAD,CACEkB,SAjBoB,WAC1B,IAAMuB,EAAmBX,EAAOQ,cAEhC,OAAOpB,EAASY,QAAO,SAAAK,GAAO,OAC5BA,EAAQ1C,KAAK6C,cAAcC,SAASE,MAatBC,GACV3B,gBA1Bc,SAAA4B,GACpBd,GAAY,SAAAX,GAAQ,OAAIA,EAASY,QAAO,SAAAK,GAAO,OAAIA,EAAQf,KAAOuB,c,YCtCtEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.034e1f7e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './ContactForm.scss';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      \n      case 'number':\n        setNumber(value);\n        break;\n      \n      default:\n        return;\n    }\n  };\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({name, number});\n    setName('');\n    setNumber('');\n  };\n  \n    return (\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\n      <label className=\"contact-form__label\">\n        Name\n        <input\n          type=\"text\"\n          className=\"contact-form__input\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"contact-form__label\">\n        Number\n        <input\n          type=\"tel\"\n          className=\"contact-form__input\"  \n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n        <button\n          type=\"submit\"\n          className=\"contact-form__btn\"\n        >\n        Add contact\n      </button> \n    </form>\n    )\n  }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.scss';\n\nconst Filter = ({ value, onChange }) => (\n  <label className=\"contact-filter\">\n    Find contacts by name\n    <input\n      type=\"text\"\n      className=\"contact-filter__input\"\n      value={value}\n      onChange={onChange} />\n  </label>\n);\n\nFilter.protoTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactListItem.scss';\n\nconst ContactListItem = ({ name, number, onDeleteContact }) => (\n  <>\n    <span>{name}: {number}</span>\n    <button type=\"button\" className=\"contact-list__delete-btn\" onClick={onDeleteContact}>Delete</button>\n  </>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import React from 'react';\nimport ContactListItem from '../ContactListItem';\nimport PropTypes from 'prop-types';\nimport './ContactList.scss';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number}) => (\n      <li key={id} className=\"contact-list__item\">\n        <ContactListItem\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactList;","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList'\nimport Container from './components/Container';\nimport './App.scss';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem('contacts')) ??\n    [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ]);\n  const [filter, setFilter] = useState('');\n  \n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    \n    const newContact = contact.name.toLowerCase();\n    const existingContactsNames = contacts.map(contact => contact.name.toLowerCase());\n\n    if (existingContactsNames.includes(newContact)) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts => contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  }\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        \n        <ContactList\n          contacts={getFilteredContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    )\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}